@import "../../styles/properties";

@import "./styles/mixinCheckboxInput";
@import "./styles/mixinCheckboxItem";
@import "./styles/mixinCheckboxText";

@import "./styles/currentStatus";
@import "./styles/mixinCheckboxChecked";
@import "./styles/mixinCheckboxStatus";

@mixin initCheckbox($design) {
  @include propertiesInit($design, 'checkbox') {
    @include mixinCheckbox;

    @include mixinCheckboxInput;
    @include mixinCheckboxItem;
    @include mixinCheckboxIcon;
    @include mixinCheckboxText;
    @include mixinCheckboxRequired;

    @include mixinCheckboxChecked;

    @include mixinCheckboxHover;
    @include mixinCheckboxActive;

    @content;
  }
}

@mixin mixinCheckbox() {
  display: inline-flex;
  align-items: flex-start;

  @include color(v('??l.text'), v('??l.text-opacity'));

  @include mixinRight;

  &.is-error,
  &.is-error input:checked ~ * {
    @include linkTo('palette', '??sys.error.palette');
    @include linkTo('text', '??sys.error.text');
  }

  @include mixinDisabled;
}

@mixin mixinDisabled() {
  @include modClass('disabled') {
    @include linkTo('palette', '??sys.disabled.palette');
    @include linkTo('text-opacity', '??sys.disabled.text-opacity');
    @include linkTo('icon.border-opacity', '??sys.disabled.icon.border-opacity');

    input:active +,
    input:hover + {
      * {
        @include linkTo('item.background-opacity', '??sys.disabled.item.background-opacity');
        @include linkTo('item.border-opacity', '??sys.disabled.item.border-opacity');
      }
    }

    input:checked ~ * {
      @include linkTo('palette', '??sys.disabled.palette');
      @include linkTo('icon.background-opacity', '??sys.disabled.checked.icon.background-opacity');
      @include linkTo('icon.border-opacity', '??sys.disabled.checked.icon.border-opacity');
    }
  }
}

@mixin mixinRight() {
  @include modClass('right') {
    & > * {
      order: 2;
    }

    @include subClassByGlobal('text') {
      @include marginLeft(0px);
      @include marginRight(v('??sys.gap'));
      order: 1;
    }
  }
}
