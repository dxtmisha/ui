@import "../../../styles/use";

@mixin mixinCheckboxChecked {
  input:checked ~ * {
    @include linkItem('palette', 'checked');
    @include linkItem('icon.text', 'checked');
    @include linkItem('icon.text-opacity', 'checked');
    @include linkItem('icon.clip-path', 'checked');
    @include linkItem('icon.transition-property', 'checked');

    @include linkTo('icon.background-opacity', '??l.checked.icon.background-opacity');
    @include linkTo('icon.border-opacity', '??l.checked.icon.border-opacity');
  }
}

@mixin mixinCheckboxError {
  @include useEnabled {
    &.is-error input ~ * {
      @include linkItem('palette', 'error');
      @include linkItem('text', 'error');

      --sys-palette: #{v('??l.palette')};
    }
  }
}

@mixin mixinCheckboxDisabled() {
  @include modClass('disabled') {
    input ~ * {
      @include linkItem('palette', 'disabled', true);
      @include linkItem('text-opacity', 'disabled', true);
      @include linkItem('item.background-opacity', 'disabled', true);
      @include linkItem('item.border-opacity', 'disabled', true);
      @include linkItem('icon.border-opacity', 'disabled');
      @include linkItem('checked.icon.background-opacity', 'disabled', true);
      @include linkItem('checked.icon.border-opacity', 'disabled', true);

      --sys-palette: #{v('??l.palette')};
    }
  }
}

@mixin mixinCheckboxHover {
  @include useEnabled {
    input:not(:active) + {
      @include subClassByGlobal('item') {
        &:hover {
          @include linkItem('item.background-opacity', 'hover');
          @include linkItem('item.border-opacity', 'hover');
        }
      }
    }
  }
}

@mixin mixinCheckboxActive {
  @include useEnabled {
    input:active ~ * {
      @include linkItem('item.background-opacity', 'active');
      @include linkItem('item.border-opacity', 'active');
    }
  }
}
