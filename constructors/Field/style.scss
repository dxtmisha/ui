@import "../../styles/properties";
@import "../../styles/color";
@import "../../styles/font";
@import "../../styles/padding";
@import "../../styles/position";

@mixin initField(
  $design,
  $left,
  $right,
  $prefix,
  $suffix
) {
  @include propertiesInit($design, 'field') {
    @include mixinField(
                    $left,
                    $right,
                    $prefix,
                    $suffix
    );
    @content;
  }
}

@mixin mixinField(
  $left,
  $right,
  $prefix,
  $suffix
) {
  #{i('??_half')}: calc(#{v('??sys.height')} / 2);
  #{i('??_label-half')}: calc(#{v('??sys.label.height')} / 2);

  #{i('??_value-left')}: #{$left};
  #{i('??_value-right')}: #{$right};
  #{i('??_value-prefix')}: #{$prefix};
  #{i('??_value-suffix')}: #{$suffix};
  #{i('??_left')}: calc(#{v('??sys.padding')} + #{v('??sys.space')} + #{$left});
  #{i('??_right')}: calc(#{v('??sys.padding')} + #{v('??sys.space')} + #{$right});

  @include color(v('??l.text'), v('??l.text-opacity'));
  width: v('??sys.width');

  @include mixinBody;
  @include mixinInput;

  @include mixinLabel;
  @include mixinTitle;
  @include mixinText;
  @include mixinRequired;

  @include mixinScoreboard;
  @include mixinPrefix;
  @include mixinCancel;

  @include mixinBorder;

  @include mixinAlign;

  &:not(#{c('??-disabled')}, #{c('??-readonly')}) {
    @include mixinSelected;
    @include mixinFocus;
    @include mixinValidation;
  }

  @include mixinDisabled;
}

@mixin mixinBody() {
  @include subClass('body') {
    @include background(v('??l.background'), v('??l.background-opacity'));
    @include gradient(v('??l.gradient'), v('??l.gradient-opacity'));

    display: flex;
    flex-wrap: wrap;
    position: relative;
    border-radius: inherit;

    max-width: 100%;
  }
}

@mixin mixinInput() {
  @include subClass('input') {
    -moz-appearance: textfield;
    border-radius: inherit;

    position: relative;
    z-index: 3;

    width: 100%;
    min-height: v('??sys.height');

    padding: {
      top: calc(#{v('??_half')} - #{v('??_label-half')} + #{v('??l.shift')});
      bottom: calc(#{v('??_half')} - #{v('??_label-half')} - #{v('??l.shift')});
    }
    @include paddingLeft(calc(#{v('??_left')} + #{v('??_value-prefix')}));
    @include paddingRight(calc(#{v('??_right')} + #{v('??_value-suffix')}));

    &::placeholder {
      @include color(v('??sys.placeholder.text'), v('??sys.placeholder.text-opacity'));
    }

    &::-webkit-clear-button,
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button,
    &::-webkit-search-cancel-button {
      -webkit-appearance: none;
    }

    &:-webkit-autofill {
      transition: background-color 5000s ease-in-out 0s;
    }

    &:read-only {
      cursor: default;
    }
  }

  @include subClass('hidden') {
    display: none;
  }
}

@mixin mixinLabel() {
  @include subClass('label') {
    @include paletteColor(v('??l.label.text'));
    @include colorOpacity(v('??l.label.text-opacity'));

    display: flex;
    position: absolute;
    @include top;
    z-index: 2;

    height: v('??_half');
    border-radius: inherit;

    &::before,
    &::after {
      content: " ";

      flex-basis: v('??sys.padding');
      min-width: v('??sys.padding');
      @include mixinFieldBorderTop;
    }

    &::before {
      border-top-left-radius: inherit;
    }

    &::after {
      border-top-right-radius: inherit;
      flex-grow: 1;
    }
  }

  @include subClass('label-top') {
    @include paletteColor(v('??l.label.text'));
    @include colorOpacity(v('??sys.label.text-opacity'));
  }
}

@mixin mixinTitle() {
  @include subClass('title') {
    @include propertiesLink('d.flex.x');

    position: relative;
    max-width: calc(100% - #{v('??_left')} - #{v('??_right')});
    @include paddingX(v('??sys.space'));

    &::after {
      content: " ";
      position: absolute;
      @include top;
      @include mixinFieldBorderTop;
    }
  }
}

@mixin mixinText() {
  @include subClass('text') {
    @include propertiesLink('d.font.ellipsis');
    font-size: v('??l.label.font-size', inherit);
    line-height: 1;

    max-width: 100%;

    transform: translate(#{calc(#{v('??l.label.translate.x')} * var(--d-dir))}, #{calc(#{v('??l.label.translate.y')} - #{v('??l.label.shift')})}) scale(#{v('??l.label.scale')});
    transform-origin: var(--d-dir-text-left);
    transition-duration: v('??sys.transition-duration');
    transition-property: color, font-size, opacity, transform;
    transition-timing-function: v('d.sys.transition-function.standard');
    opacity: v('??l.label.opacity');
  }
}

@mixin mixinRequired() {
  @include subClass('required') {
    @include color(v('??sys.label.required'));

    &::after {
      content: '*';
    }
  }
}

@mixin mixinScoreboard() {
  @include subClass('scoreboard') {
    @include colorOpacity(v('??sys.label.text-opacity'));

    @include propertiesLink('d.flex.x');
    @include paddingX(v('??sys.padding'));
    position: relative;
    z-index: 5;

    width: 100%;
    height: 0;

    transform: translateY(#{calc(-1 * #{v('??_half')})});

    @include subClass('context') {
      @include propertiesLink('d.flex.x');
      gap: 0 v('??sys.space');

      &:first-child {
        @include paddingRight(v('??sys.space'));
      }

      &:last-child {
        @include paddingLeft(v('??sys.space'));
      }
    }

    @include subClass('space') {
      flex-grow: 1;
    }
  }

  .is-trailing,
  .is-cancel,
  .is-previous,
  .is-next {
    cursor: pointer;
  }

  &:not(.is-arrow, .is-cancel) {
    &:focus-within, &#{c('??--focus')} {
      @include subClassByGlobal('scoreboard') {
        z-index: 1
      }
    }
  }
}

@mixin mixinPrefix() {
  &__prefix,
  &__suffix {
    @include color(v('??l.prefix.text'), v('??l.prefix.text-opacity'));
    opacity: v('??l.prefix.opacity');
    transform: translateY(v('??l.shift'));
    transition-property: opacity;
  }

  @include subClass('prefix') {
    @include paddingLeft(v('??sys.space'));
  }

  @include subClass('suffix') {
    @include paddingRight(v('??sys.space'));
  }

  &.is-suffix {
    @include subClassByGlobal('input') {
      @include textAlign('right');
    }
  }
}

@mixin mixinCancel() {
  @include subClass('scoreboard') {
    @include subClass('context') {
      & > .is-cancel {
        transition-duration: v('??sys.transition-duration');
        transition-property: opacity;
      }
    }
  }

  @include modClass('cancel') {
    @include modClass('auto') {
      &:not(:hover) .is-cancel {
        opacity: 0;
      }
    }
  }
}

@mixin mixinBorder() {
  @include subClass('border') {
    position: absolute;
    @include inset;

    @include mixinFieldBorder;
    border-right-width: v('??l.border-width');
    border-bottom-width: v('??l.border-width');
    border-left-width: v('??l.border-width');
    border-radius: inherit;
  }
}

@mixin mixinAlign() {
  @include modClass('align') {
    @include modClass('center') {
      @include subClassByGlobal('input') {
        @include textAlign('center');
      }

      &.is-arrow {
        @include linkTo('label.translate-x', '0px');
        @include subClassByGlobal('label') {
          &::before {
            flex-grow: 1;
          }
        }
      }
    }

    @include modClass('left') {
      @include subClassByGlobal('input') {
        @include textAlign('left');
      }
    }

    @include modClass('right') {
      @include subClassByGlobal('input') {
        @include textAlign('right');
      }

      &.is-arrow {
        @include subClassByGlobal('input') {
          @include textAlign('left');
        }
      }
    }
  }
}

@mixin mixinDisabled() {
  @include modClass('disabled') {
    @include linkTo('text-opacity', '??sys.disabled.text-opacity');
    @include linkTo('label.text-opacity', '??sys.disabled.label.text-opacity');
    @include linkTo('placeholder.text-opacity', '??sys.disabled.placeholder.text-opacity');

    @include subClassByGlobal('input') {
      @include colorOpacity(v('??l.text-opacity'));
    }

    @include subClassByGlobal('label-top') {
      @include colorOpacity(v('??l.label.text-opacity'));
    }
  }
}

@mixin mixinFocus() {
  &:focus-within, &#{c('??--focus')} {
    @include linkTo('label.text', '??sys.focus.label.text');
    @include linkTo('label.text-opacity', '??sys.focus.label.text-opacity');
  }
}

@mixin mixinValidation() {
  &.is-validation {
    @include linkTo('text', '??sys.validation.text', null, true);
    @include linkTo('label.text', '??sys.validation.label.text', null, true);

    @include subClassByGlobal('body') {
      @include linkTo('border', '??sys.validation.border', null, true);
    }
  }
}

@mixin mixinSelected() {
  @include modClassByGlobal('selected') {
    @include linkTo('background', '??sys.selected.background');
    @include linkTo('border', '??sys.selected.border');
    @include linkTo('gradient', '??sys.selected.gradient');
    @include linkTo('text', '??sys.selected.text');

    @include subClassByGlobal('body') {
      @include paletteColor(v('??l.text'));
      @include paletteBackground(v('??l.background'));
      @include paletteGradient(v('??l.gradient'));
    }

    @include subClassByGlobal('border') {
      @include paletteBorder(v('??l.border'));
    }

    @include subClassByGlobal('label') {
      &::before,
      &::after {
        @include paletteBorder(v('??l.border'));
      }
    }

    @include subClassByGlobal('title') {
      &::after {
        @include paletteBorder(v('??l.border'));
      }
    }
  }
}

@mixin mixinFieldBorder() {
  @include border(v('??l.border'), v('??l.border-opacity'));
}

@mixin mixinFieldBorderTop() {
  @include mixinFieldBorder;
  border-top-width: v('??l.border.width');
}
