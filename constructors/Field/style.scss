@import "../../styles/properties";
@import "../../styles/color";
@import "../../styles/padding";
@import "../../styles/position";

@mixin initField(
  $design,
  $left,
  $right
) {
  @include propertiesInit($design, 'field') {
    @include mixinField($left, $right);
    @content;
  }
}

@mixin mixinField($left, $right) {
  #{i('??_half')}: calc(#{v('??sys.height')} / 2);
  #{i('??_label-half')}: calc(#{v('??sys.label.height')} / 2);
  #{i('??_left')}: calc(#{v('??sys.padding')} + #{v('??sys.space')} + #{$left});
  #{i('??_right')}: calc(#{v('??sys.padding')} + #{v('??sys.space')} + #{$right});

  width: v('??sys.width');

  @include mixinBody;
  @include mixinInput;

  @include mixinLabel;
  @include mixinTitle;
  @include mixinText;
  @include mixinRequired;

  @include mixinScoreboard;

  @include mixinBorder;

  &:focus-within, &#{c('??--focus')} {
    @include linkTo('gradient-opacity', '??sys.focus.gradient-opacity', null, true);
    @include linkTo('label.text', '??sys.focus.label.text');
    @include linkTo('label.text-opacity', '??sys.focus.label.text-opacity');
  }
}

@mixin mixinBody() {
  @include subClass('body') {
    @include background(v('??l.background'), v('??l.background-opacity'));
    @include gradient(v('??l.gradient'), v('??l.gradient-opacity'));

    display: flex;
    flex-wrap: wrap;
    position: relative;
    border-radius: inherit;

    max-width: 100%;
  }
}

@mixin mixinInput() {
  @include subClass('input') {
    -moz-appearance: textfield;
    border-radius: inherit;

    position: relative;
    z-index: 3;

    width: 100%;
    min-height: v('??sys.height');

    padding: {
      top: calc(#{v('??_half')} - #{v('??_label-half')} + #{v('??l.label.shift')});
      bottom: calc(#{v('??_half')} - #{v('??_label-half')} - #{v('??l.label.shift')});
    }
    @include paddingLeft(#{v('??_left')});
    @include paddingRight(#{v('??_right')});

    &::placeholder {
      @include colorOpacity(v('??sys.label.text-opacity'));
    }

    &::-webkit-clear-button,
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button,
    &::-webkit-search-cancel-button {
      -webkit-appearance: none;
    }

    &:-webkit-autofill {
      transition: background-color 5000s ease-in-out 0s;
    }
  }

  @include subClass('hidden') {
    display: none;
  }
}

@mixin mixinLabel() {
  @include subClass('label') {
    @include color(v('??l.label.text'), v('??l.label.text-opacity'));

    display: flex;
    position: absolute;
    @include top;
    z-index: 2;

    height: v('??_half');
    border-radius: inherit;

    &::before,
    &::after {
      content: " ";

      flex-basis: v('??sys.padding');
      min-width: v('??sys.padding');
      @include mixinFieldBorderTop;
    }

    &::before {
      border-top-left-radius: inherit;
    }

    &::after {
      border-top-right-radius: inherit;
      flex-grow: 1;
    }
  }
}

@mixin mixinTitle() {
  @include subClass('title') {
    @include propertiesLink('d.flex.x');

    position: relative;
    max-width: calc(100% - #{v('??_left')} - #{v('??_right')});
    @include paddingX(v('??sys.space'));

    &::after {
      content: " ";
      position: absolute;
      @include top;
      @include mixinFieldBorderTop;
    }
  }
}

@mixin mixinText() {
  @include subClass('text') {
    @include propertiesLink('d.font.ellipsis');
    line-height: 1;

    max-width: 100%;

    transform: translate(#{calc(#{v('??l.label.translate.x')} * var(--d-dir))}, #{calc(#{v('??l.label.translate.y')} - #{v('??l.shift')})}) scale(#{v('??l.label.scale')});
    transform-origin: var(--d-dir-text-left);
    transition-duration: v('??sys.transition-duration');
    transition-property: color, font-size, opacity, transform;
    transition-timing-function: v('d.sys.transition-function.standard');
    opacity: v('??l.label.opacity');
  }
}

@mixin mixinRequired() {
  @include subClass('required') {
    @include color(v('??sys.label.required'));

    &::after {
      content: '*';
    }
  }
}

@mixin mixinScoreboard() {
  @include subClass('scoreboard') {
    @include colorOpacity(v('??sys.label.text-opacity'));

    @include propertiesLink('d.flex.x');
    @include paddingX(v('??sys.padding'));
    position: relative;
    z-index: 5;

    width: 100%;
    height: 0;

    transform: translateY(#{calc(-1 * #{v('??_half')})});
  }

  @include subClass('space') {
    flex-grow: 1;
  }
}

@mixin mixinBorder() {
  @include subClass('border') {
    position: absolute;
    @include inset;

    @include mixinFieldBorder;
    border-right-width: v('??l.border-width');
    border-bottom-width: v('??l.border-width');
    border-left-width: v('??l.border-width');
    border-radius: inherit;
  }
}

@mixin mixinFieldBorder() {
  @include border(v('??l.border'), v('??l.border-opacity'));
}

@mixin mixinFieldBorderTop() {
  @include mixinFieldBorder;
  border-top-width: v('??l.border.width');
}
