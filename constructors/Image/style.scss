@import "../../styles/properties";

@mixin initImage($design) {
  @include propertiesInit($design, 'image') {
    @include mixinImage;
    @content;
  }
}

@mixin mixinImage() {
  @include propertiesLink('d.flex.center');

  background-size: cover;
  background-repeat: no-repeat;
  border-radius: inherit;
  font-size: v('??_font-size');
  direction: ltr;

  position: absolute;
  inset: 0;

  transform: none;
  transition-duration: v('d.sys.transition-duration.standard');
  transition-property: background-color, background-size, color, filter, opacity, transform;

  @include mixinLineAwesome;
  @include mixinMaterial;

  @include mixinType;

  @include modClass('turn') {
    transform: rotate(180deg);
  }

  @include modClass('disabled') {
    @include colorOpacity(v('??_disabled'));
  }

  @include modClass('hide') {
    @include propertiesLink('d.animation.hide');
  }
}

@mixin mixinType() {
  &.is-type {
    &--public {
      @include propertiesLink('d.mixin.background-as-color');
      mask-position: center;
      mask-repeat: no-repeat;
      mask-size: contain;
    }

    &--color,
    &--image {
      @include modClassByGlobal('disabled') {
        @include mixinGrayscale;
      }
    }
  }
}

@mixin mixinGrayscale() {
  filter: grayscale(1) #{opacity}(#{v('??_disabled')});
}

@mixin mixinLineAwesome() {
  &.la,
  &.lab,
  &.lad,
  &.lal,
  &.lar,
  &.las {
    &::before {
      color: inherit;
    }

    @content;
  }
}

@mixin mixinMaterial() {
  &.material-icons {
    @content;

    direction: ltr;

    &.type- {
      &outlined {
        font-family: 'Material Icons Outlined', sans-serif;
      }

      &round {
        font-family: 'Material Icons Round', sans-serif;
      }

      &sharp {
        font-family: 'Material Icons Sharp', sans-serif;
      }

      &two-tone {
        font-family: 'Material Icons Two Tone', sans-serif;
      }
    }
  }
}
