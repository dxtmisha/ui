@import "../../styles/properties";

@mixin initIcon($design) {
  @include propertiesInit($design, 'icon') {
    @include mixinIcon;
    @content;
  }
}

@mixin mixinIcon() {
  @include propertiesLink('d.font.readonly');

  border-radius: v('??_rounded');
  display: inline-block;
  overflow: hidden;
  position: relative;

  min-width: v('??_size');
  @include squared(v('??_size'));

  transition-duration: v('d.sys.transition-duration.standard');
  transition-property: background, clip-path, margin, opacity, transform;

  @include mixinAnimation;
  @include mixinAnimationShow;

  @include modClass('in-end') {
    order: 999999;
  }

  @include modClass('background') {
    @include paletteBackground(v('??_background'));
    @include backgroundOpacity(v('??_opacity'));
  }

  @include modClass('disabled') {
    @include backgroundOpacity(#{calc(v('??_opacity') * v('??_disabled'))});
  }

  @include modClass('hide') {
    @include propertiesLink('d.animation.hide');
  }
}

@mixin mixinAnimation() {
  @include modClass('animation-type') {
    @include modClass('type2') {
      clip-path: inset(0 0 0 0);
      transition: clip-path #{v('d.sys.transition-duration.fade.enter')} #{v('d.sys.transition-function.deceleration')},
      margin #{v('d.ref.transition-duration.1')} linear,
      background #{v('d.sys.transition-duration.standard')} linear,
      transform #{v('d.sys.transition-duration.standard')} linear;

      &#{c('??-hide')} {
        clip-path: inset(0 100% 0 0);
        margin: 0 calc(#{v('??_size')} * -1) 0 0 !important;
        opacity: 1;
        transform: none;
        transition-duration: v('d.sys.transition-duration.fade.exit');
        transition-timing-function: linear;
      }
    }
  }
}

@mixin mixinAnimationShow() {
  @include modClass('animation-show') {
    animation-duration: v('d.sys.transition-duration.standard');
    animation-name: getCode('??-show')
  }
}
